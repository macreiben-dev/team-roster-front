trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - group: TeamRoster-Front-Prod
    sourceFolder: "src"
    deployDirectory: "/home/team-roster-deploy/deploy"
    currentSshEndpoint: "ssh-team-roster"

jobs:
  - job: build
    displayName: "Build Job"
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "20.x"
        displayName: "Install Node.js"

      - script: |
          npm install
        displayName: "npm install"
        workingDirectory: $(sourceFolder)

      - script: |
          npm run build:prod
        displayName: "npm build"
        workingDirectory: $(sourceFolder)

      - script: |
          npm run test
        displayName: "npm test"
        workingDirectory: $(sourceFolder)

  - job: cleanup_and_deploy
    displayName: "Cleanup and Deploy Job"
    dependsOn: build
    steps:
      - script: |
          echo "VITE_API_SERVER_URL=$(VITE_API_SERVER_URL)" >  $(sourceFolder)/.env
          echo "VITE_API_PATH_ME=$(VITE_API_PATH_ME)" >> $(sourceFolder)/.env
          echo "VITE_API_LOGIN_API=$(VITE_API_LOGIN_API)" >> $(sourceFolder)/.env
        displayName: "Generate .env.production file"

      - script: |
          npm install
        displayName: "npm install"
        workingDirectory: $(sourceFolder)

      - script: |
          npm run build:prod
        displayName: "npm build"
        workingDirectory: $(sourceFolder)

      - task: CopyFilesOverSSH@0
        displayName: "Copy dist to remote server"
        inputs:
          cleanTargetFolder: true
          sshEndpoint: $(currentSshEndpoint)
          contents: "src/dist/**"
          targetFolder: $(deployDirectory)
          readyTimeout: "20000"
          delayBetweenUploads: "5"

      - task: CopyFilesOverSSH@0
        displayName: "Copy dockerfile to remote server"
        inputs:
          cleanTargetFolder: false
          sshEndpoint: $(currentSshEndpoint)
          contents: "$(sourceFolder)/Docker*"
          targetFolder: $(deployDirectory)
          readyTimeout: "20000"
          delayBetweenUploads: "5"

      - task: SSH@0
        displayName: "create docker image"
        inputs:
          sshEndpoint: $(currentSshEndpoint)
          runOptions: "inline"
          inline: |
            sudo docker build --no-cache $(deployDirectory)/$(sourceFolder) -t "team-roster-front" 2>&1
